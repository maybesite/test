acticle  views.py               获取后台内容  并显示
from django.shortcuts import render,render_to_response,get_object_or_404
from django.http import HttpResponse
from .models import Article         引入
# Create your views here.
def article_detail(request,article_id):
    #article=Article.objects.get(id=article_id)   模型objects是获取或操作模型的对象
    article=get_object_or_404(Article,pk=article_id)              
    context={}
    context['article_obj']=article
    #return render(request,'article_detail.html',context)
    return render_to_response('article_detail.html',context)     系统会自动用在article template article_detail.html  不需要其他操作
    #return HttpResponse("文章标题:%s 文章内容%s" % (article.title,article.content))
    
template  article_detail.html
<html>
<head lang='en'>
	<meta charset='UTF-8'>
	<title></title>
</head>
<body>
	<h1>{{article_obj.title}}</h2>
	<hr>
	<p>{{article_obj.content}}<p>
</body>
</html>

def article_list(request):
    articles=Article.objects.all()               获取所有
    context={}
    context['articles']=articles
    return render_to_response('article_list.html',context)
 
 template article_list.html
<html>
<head lang='en'>
	<meta charset='UTF-8'>
	<title></title>
</head>
<body>
	{% for article in articles %}
	<a href="{% url 'article_detail' article.pk%}">{{article.title}}</a>
	{% endfor %}
</body>
</html>
 
mysite urls.py     总urls包含app的urls
from django.contrib import admin
from django.urls import include, path      引入include
from . import views                            
from article.views import article_detail,article_list
urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.index),
    path('article/',include('article.urls'))
]
    
article urls.py     
from django.urls import path
from . import views
urlpatterns = [
    path('<int:article_id>',views.article_detail,name="article_detail"),
    path('',views.article_list),
]







